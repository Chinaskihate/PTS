// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PTS.Persistence.DbContexts;

#nullable disable

namespace PTS.Persistence.Migrations.TaskTables
{
    [DbContext(typeof(TaskDbContext))]
    [Migration("20240303115051_AddVersionTable")]
    partial class AddVersionTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PTS.Persistence.Models.Tasks.Task", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AvgTimeInMin")
                        .HasColumnType("integer");

                    b.Property<int>("Complexity")
                        .HasColumnType("integer");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Tasks");
                });

            modelBuilder.Entity("PTS.Persistence.Models.Themes.Theme", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsBanned")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("ParentId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ParentId");

                    b.ToTable("Themes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsBanned = false,
                            Name = "RootTheme"
                        });
                });

            modelBuilder.Entity("PTS.Persistence.Models.Versions.TaskVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("InputCondition")
                        .HasColumnType("text");

                    b.Property<string>("OutputCondition")
                        .HasColumnType("text");

                    b.Property<int>("ProgrammingLanguage")
                        .HasColumnType("integer");

                    b.Property<int>("TaskId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("TaskId");

                    b.ToTable("TaskVersion");
                });

            modelBuilder.Entity("TaskTheme", b =>
                {
                    b.Property<int>("TasksId")
                        .HasColumnType("integer");

                    b.Property<int>("ThemesId")
                        .HasColumnType("integer");

                    b.HasKey("TasksId", "ThemesId");

                    b.HasIndex("ThemesId");

                    b.ToTable("TaskTheme");
                });

            modelBuilder.Entity("PTS.Persistence.Models.Themes.Theme", b =>
                {
                    b.HasOne("PTS.Persistence.Models.Themes.Theme", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("PTS.Persistence.Models.Versions.TaskVersion", b =>
                {
                    b.HasOne("PTS.Persistence.Models.Tasks.Task", "Task")
                        .WithMany("Versions")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("TaskTheme", b =>
                {
                    b.HasOne("PTS.Persistence.Models.Tasks.Task", null)
                        .WithMany()
                        .HasForeignKey("TasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PTS.Persistence.Models.Themes.Theme", null)
                        .WithMany()
                        .HasForeignKey("ThemesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PTS.Persistence.Models.Tasks.Task", b =>
                {
                    b.Navigation("Versions");
                });

            modelBuilder.Entity("PTS.Persistence.Models.Themes.Theme", b =>
                {
                    b.Navigation("Children");
                });
#pragma warning restore 612, 618
        }
    }
}
