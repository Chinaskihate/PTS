networks:
  pts-dev:
    driver: bridge
services:
  db:
    container_name: pts-db
    environment:
      - POSTGRES_PASSWORD=N7fjsk38aMpErz241FjmdkjUowqM
    image: postgres:15
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - pts-dev
  pg-admin:
    container_name: pts-pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin5138371247@admin.com
      PGADMIN_DEFAULT_PASSWORD: r5136o547KMsoFD84391t
    depends_on:
      - db
    volumes:
      - pg-admin:/var/lib/pgadmin4/data
    ports:
      - "5050:80"
    networks:
      - pts-dev
  auth-api:
    container_name: pts-auth-api
    build:
      context: .
      dockerfile: PTS.AuthAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - SMTP_SENDER_HOST=$SMTP_SENDER_HOST
      - SMTP_SENDER_PORT=$SMTP_SENDER_PORT
      - SENDER_EMAIL=$SENDER_EMAIL
      - SENDER_NAME=$SENDER_NAME
      - SENDER_PASSWORD=$SENDER_PASSWORD
      - ASPNETCORE_URLS=http://+:7002
    ports:
      - "7002:7002"
    depends_on:
      - db
    restart: always
  admin-api:
    container_name: pts-admin-api
    build:
      context: .
      dockerfile: PTS.AdminAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7003
    ports:
      - "7003:7003"
    depends_on:
      - db
      - auth-api
    restart: always
  theme-api:
    container_name: pts-theme-api
    build:
      context: .
      dockerfile: PTS.ThemeAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7004
    ports:
      - "7004:7004"
    depends_on:
      - db
      - admin-api
    restart: always
  task-api:
    container_name: pts-task-api
    build:
      context: .
      dockerfile: PTS.TaskAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7005
    ports:
      - "7005:7005"
    depends_on:
      - db
      - theme-api
    restart: always
  test-api:
    container_name: pts-test-api
    build:
      context: .
      dockerfile: PTS.TestAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7006
    ports:
      - "7006:7006"
    depends_on:
      - db
      - task-api
    restart: always
  test-exec-api:
    container_name: pts-exec-api
    build:
      context: .
      dockerfile: PTS.TestExecutionAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7007
    ports:
      - "7007:7007"
    depends_on:
      - db
      - test-api
    restart: always
  test-generator-api:
    container_name: pts-test-generator-api
    build:
      context: .
      dockerfile: PTS.TestGeneratorService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7008
    ports:
      - "7008:7008"
    depends_on:
      - db
      - admin-api
  stats-api:
    container_name: pts-stats-api
    build:
      context: .
      dockerfile: PTS.StatisticsAPI/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=$ASPNETCORE_ENVIRONMENT
      - ASPNETCORE_URLS=http://+:7009
    ports:
      - "7009:7009"
    depends_on:
      - db
      - admin-api
volumes:
  db:
  pg-admin: